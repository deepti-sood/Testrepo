///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Test_123
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Login recording.
    /// </summary>
    [TestModule("c7606b65-ddce-40e7-be5f-2a3c5ffd9a35", ModuleType.Recording, 1)]
    public partial class Login : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Test_123Repository repository.
        /// </summary>
        public static Test_123Repository repo = Test_123Repository.Instance;

        static Login instance = new Login();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Login()
        {
            var_Username = "medwayqatest1";
            var_Password = "automationautomation1";
            var_app = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Login Instance
        {
            get { return instance; }
        }

#region Variables

        string _var_Username;

        /// <summary>
        /// Gets or sets the value of variable var_Username.
        /// </summary>
        [TestVariable("2a9606a2-bc20-4a30-a237-299650027b83")]
        public string var_Username
        {
            get { return _var_Username; }
            set { _var_Username = value; }
        }

        string _var_Password;

        /// <summary>
        /// Gets or sets the value of variable var_Password.
        /// </summary>
        [TestVariable("33570670-46be-4530-a6db-84a63dfa7e82")]
        public string var_Password
        {
            get { return _var_Password; }
            set { _var_Password = value; }
        }

        string _var_app;

        /// <summary>
        /// Gets or sets the value of variable var_app.
        /// </summary>
        [TestVariable("5353e4c0-56d2-4864-b509-e87b3585e221")]
        public string var_app
        {
            get { return _var_app; }
            set { _var_app = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application 'MedwaySigma.exe' in normal mode. Return value bound to $.", new RecordItemIndex(0));
            Host.Local.RunApplication("MedwaySigma.exe", "new", "C:\\Program Files (x86)\\System C\\Medway\\Cloud_Agile_OS_01\\Client", false);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click at {X=0,Y=0}.", new RecordItemIndex(1));
            //Mouse.MoveTo(0, 0);
            //Mouse.Click(System.Windows.Forms.MouseButtons.Left);
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'Login.Pages.LoginPage'", repo.Login.Pages.LoginPage.SelfInfo, new ActionTimeout(30000), new RecordItemIndex(2));
            repo.Login.Pages.LoginPage.SelfInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.Medway.UserName' at Center.", repo.Login.Medway.UserNameInfo, new RecordItemIndex(3));
            repo.Login.Medway.UserName.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$var_Username' with focus on 'Login.Medway.UserName'.", repo.Login.Medway.UserNameInfo, new RecordItemIndex(4));
            repo.Login.Medway.UserName.PressKeys(var_Username);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.Medway.Password' at Center.", repo.Login.Medway.PasswordInfo, new RecordItemIndex(5));
            repo.Login.Medway.Password.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$var_Password' with focus on 'Login.Medway.Password'.", repo.Login.Medway.PasswordInfo, new RecordItemIndex(6));
            repo.Login.Medway.Password.PressKeys(var_Password);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.Medway.Button' at Center.", repo.Login.Medway.ButtonInfo, new RecordItemIndex(7));
            repo.Login.Medway.Button.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
